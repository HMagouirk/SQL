# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata 
(id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL.


#1. How many times does each artist appear and what is their most popular song?

SELECT artist_name, COUNT(artist_name) AS COUNT, track_name AS top_track
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING MAX(popularity)
ORDER BY COUNT(artist_name) desc

#2. What is each artists average popularity?

SELECT artist_name, ROUND(AVG(popularity*1.0),0) AS avg_popularity
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY avg_popularity desc

#3. What is each artist's average danceability and energy?

SELECT artist_name, ROUND(AVG(danceability),2) AS avg_danceability, ROUND(AVG(energy),2) AS avg_energy, 
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY artist_name

#4. What is the duration and valence of each artist's most popular song?

SELECT artist_name, track_name AS top_track, duration_ms, valence
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING MAX(popularity)
ORDER BY artist_name

#5.Which tracks are collabs?

SELECT track_name
FROM BIT_DB.Spotifydata
WHERE track_name like '%(with%' 
OR track_name like '%(feat.%'
ORDER BY track_name
